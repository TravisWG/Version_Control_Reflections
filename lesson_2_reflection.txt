What happens when you initialize a repository? Why do you need to do it?

	A git repository is created.  This in needed so commits can be made to the repository.

How is the staging area different from the working directory and the repository? What value do you think it offers?

	The staging area is an area aside from the working directory where files to be placed before committing them to the repository.  It allows the programmer to choose which files will go into the repository as opposed to committing the entire working directory.

How can you use the staging area to make sure you have one commit per logical change?

	You can make changes to multiple files, but can add them to the staging area separately and commit them separately.  This allows you to make multiple unrelated changes at once, but have one logical change per commit.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

	If you were trying to implement a feature and are unsure if it will be suitable for a final product, you could use branches to create an experimental feature version.  Or if you wanted to work on a port to a different platform, you could create a branch so updates could be made independently for that version.

How do the diagrams help you visualize the branch structure?
	
	They allow you to see which commits will be within the different branches and how the tips of those branches might differ.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

	Merging the two branches together combines the changes that were made seperately in each branch into a single commit.  	The diagram is represented the way it is to show that changes were made to the repository in two different branches before finally being merged into one branch.